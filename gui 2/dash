import customtkinter as ctk
import os
import sqlite3
from datetime import date

ctk.set_appearance_mode("dark")  # Modes: system (default), light, dark
ctk.set_default_color_theme("blue")  # Themes: blue (default), dark-blue, green

global search_entry

def sideframe():

    f1 = ctk.CTkFrame(app, height=750, width=250)
    f1.grid(row=0, column=0, rowspan=3, sticky='NWSE')
    f1.columnconfigure(0, weight=1)
    f1.rowconfigure([0,1,2], weight=1)

    titles_btn = ctk.CTkButton(f1, text='Titles')
    titles_btn.grid(row=0, column=0, padx=20)

    inventory_btn = ctk.CTkButton(f1, text='Inventory', state='disabled')
    inventory_btn.grid(row=1, column=0, padx=10)

    payments_btn = ctk.CTkButton(f1, text='Payments', state='disabled')
    payments_btn.grid(row=2, column=0, padx=10)

    tag_label = ctk.CTkLabel(f1, text='Made by Ricky', font=('CTkfont', 14))
    tag_label.grid(row=3, column=0, sticky='S')
    
def new_entry():
    global vin_entry
    global make_box
    global model_entry
    global year_entry
    global color_entry
    global from_entry
    global date_entry

    top = ctk.CTkToplevel()
    top.lift()
    # mm/dd/yy
    t_day = date.today().strftime("%m/%d/%y")
     

    vin_label = ctk.CTkLabel(top, text="VIN")
    vin_label.grid(row=0, column=0)
    vin_entry = ctk.CTkEntry(top)
    vin_entry.grid(row=1, column=0)

    make_label = ctk.CTkLabel(top, text="Make")
    make_label.grid(row=0, column=1)
    make_box = ctk.CTkComboBox(top, values=make_values)
    make_box.grid(row=1, column=1)
    
    model_label = ctk.CTkLabel(top, text="Model")
    model_label.grid(row=2, column=0)
    model_entry = ctk.CTkEntry(top)
    model_entry.grid(row=3, column=0)

    year_label = ctk.CTkLabel(top, text="Year")
    year_label.grid(row=2, column=1)
    year_entry = ctk.CTkEntry(top)
    year_entry.grid(row=3, column=1)

    color_label = ctk.CTkLabel(top, text="Color")
    color_label.grid(row=4, column=0)
    color_entry = ctk.CTkEntry(top)
    color_entry.grid(row=5, column=0)

    from_label = ctk.CTkLabel(top, text="From")
    from_label.grid(row=4, column=1)
    from_entry = ctk.CTkEntry(top)
    from_entry.grid(row=5, column=1)

    date_label = ctk.CTkLabel(top, text="Date")
    date_label.grid(row=6, column=0, columnspan=2)
    date_entry = ctk.CTkEntry(top, placeholder_text=str(t_day))
    date_entry.grid(row=7, column=0, columnspan=2)

    submit_btn = ctk.CTkButton(top, text="Submit", command=submit)
    submit_btn.grid(row=8, column=0, columnspan=2)

#Submit New Record
def submit():
    print(make_box.get())
    # Create databases
    conn = sqlite3.connect("titles.db")

    # Create cursor
    c = conn.cursor()

    #Insert Into Table
    c.execute("INSERT INTO info (car_VIN, car_make, car_model, car_year, car_color, c_from, c_date) VALUES (?,?,?,?,?,?,?)", (vin_entry.get(), make_box.get(), model_entry.get(), year_entry.get(), color_entry.get(), from_entry.get(), date_entry.get()))
    
    conn.commit()
    c.close
    conn.close()

def search_titles():
    for widget in view_screen.winfo_children():
        widget.destroy()

    search = search_entry.get()

    #Create databases
    conn = sqlite3.connect("titles.db")

    #Create cursor
    c = conn.cursor()

    c.execute("SELECT *, oid FROM info")
    records = c.fetchall()

    for record in records:
        for info in record:
            if search in str(info):
                record_label=ctk.CTkLabel(view_screen, text=record, cursor="hand2", font=('Arial',14, 'bold'))
                record_label.pack()
            





app = ctk.CTk()  # create CTk window like you do with the Tk window
app.title('HWY12 Dashboard')
app.rowconfigure([0,1,2], weight=1)
app.columnconfigure(0, weight=1)
app.columnconfigure(1, weight=4)


make_values = ['Acura', 'BMW', 'Cadillac', 'Honda', 'Chevy', 'Saturn', 'Audi', 'Saab']

# Create databases
conn = sqlite3.connect("titles.db")

# Create cursor
c = conn.cursor()
c.execute("SELECT *, oid FROM info")
records = c.fetchall()

f2 = ctk.CTkFrame(app, height=100, width=350)
f2.grid(row=0, column=1, sticky='NWSE')

title_label = ctk.CTkLabel(f2, text='HWY12 Dashboard')
title_label.pack()

f3 = ctk.CTkFrame(app, height=350, width=350)
f3.grid(row=1, column=1, sticky='NWSE')
f3.columnconfigure(0, weight=1)
f3.rowconfigure([0,1], weight=1)

view_screen = ctk.CTkScrollableFrame(f3, label_text="Titles")
view_screen.grid(row=0, column=0, rowspan=3, sticky='NSWE')

new_btn = ctk.CTkButton(f3, text="New Entry", command=new_entry)
new_btn.grid(row=0, column=1, padx=10, pady=10)
   
new_btn = ctk.CTkButton(f3, text="Search")    
new_btn.grid(row=0, column=2,padx=10, pady=10)

new_btn = ctk.CTkButton(f3, text="Delete")
new_btn.grid(row=1, column=1, padx=10, pady=10 )

new_btn = ctk.CTkButton(f3, text="Edit")
new_btn.grid(row=1, column=2, padx=10, pady=10)

search_entry = ctk.CTkEntry(f3, placeholder_text='Search For Title')
search_entry.grid(row=2, column = 1, sticky="NWE")

search_btn = ctk.CTkButton(f3, text="Search", command=search_titles)
search_btn.grid(row=2, column = 2)

f4 = ctk.CTkFrame(app, height=150, width=850)
f4.grid(row=2, column=1, sticky='NWSE')


#Create databases
conn = sqlite3.connect("titles.db")

#Create cursor
c = conn.cursor()

#Create table
c.execute("""CREATE TABLE IF NOT EXISTS info(
    car_VIN text,
    car_make text,
    car_model text,
    car_year integer,
    car_color text,
    c_from text,
    c_date text
        )""")

# Add Widgets/Update
c.execute("SELECT *, oid FROM info")
records = c.fetchall()

for record in records[-20:]:
    record_label = ctk.CTkLabel(view_screen, text=record, cursor="hand2", font=('Arial',14, 'bold')).pack()


sideframe()

app.mainloop()
